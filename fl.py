async def process_user_request(update: Update, context: CallbackContext, username: str):
    chat_id = update.message.chat_id  # L·∫•y chat_id c·ªßa ng∆∞·ªùi d√πng
    current_time = datetime.now()  # L·∫•y th·ªùi gian hi·ªán t·∫°i

    # Kh·ªüi t·∫°o l·∫°i time check cho ng∆∞·ªùi d√πng sau m·ªói l·∫ßn s·ª≠ d·ª•ng
    headers = {
        'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
        'accept-language': 'vi,fr-FR;q=0.9,fr;q=0.8,en-US;q=0.7,en;q=0.6',
        'cache-control': 'max-age=0',
        'priority': 'u=0, i',
        'sec-ch-ua': '"Google Chrome";v="125", "Chromium";v="125", "Not.A/Brand";v="24"',
        'sec-ch-ua-mobile': '?0',
        'sec-fetch-dest': 'document',
        'sec-fetch-mode': 'navigate',
        'sec-fetch-site': 'cross-site',
        'sec-fetch-user': '?1',
        'upgrade-insecure-requests': '1',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36',
    }

    try:
        # G·ªçi h√†m ƒë·ªìng b·ªô send_request ƒë·ªÉ th·ª±c hi·ªán truy v·∫•n
        access = await asyncio.get_event_loop().run_in_executor(executor, send_request, 'https://tikfollowers.com/free-tiktok-followers', headers)

        if access is None or access.status_code != 200:
            await update.message.reply_text('‚ùå **L·ªói**: Kh√¥ng th·ªÉ truy c·∫≠p TikFollowers. Vui l√≤ng th·ª≠ l·∫°i sau!')
            return

        session = access.cookies.get('ci_session')
        if not session:
            await update.message.reply_text('‚ùå **L·ªói**: Kh√¥ng th·ªÉ l·∫•y session t·ª´ TikFollowers. Vui l√≤ng th·ª≠ l·∫°i sau!')
            return

        headers.update({'cookie': f'ci_session={session}'})
        token = access.text.split("csrf_token = '")[1].split("'")[0]

        # G·ª≠i y√™u c·∫ßu tƒÉng follow
        data = f'{{"type":"follow","q":"@{username}","google_token":"t","token":"{token}"}}'
        search = await asyncio.get_event_loop().run_in_executor(executor, send_request, 'https://tikfollowers.com/api/free', headers, data, 'POST')

        if search and search.json().get('success', False):
            data_follow = search.json()['data']
            data = f'{{"google_token":"t","token":"{token}","data":"{data_follow}","type":"follow"}}'
            send_follow = await asyncio.get_event_loop().run_in_executor(executor, send_request, 'https://tikfollowers.com/api/free/send', headers, data, 'POST')

            if send_follow and send_follow.json().get('o') == 'Success!':
                await update.message.reply_text('‚úÖ **Th√†nh c√¥ng!** \n\n'
                                               'TƒÉng Follow TikTok cho t√†i kho·∫£n c·ªßa b·∫°n ƒë√£ th√†nh c√¥ng! üéâ')
            elif send_follow and send_follow.json().get('o') == 'Oops...':
                try:
                    thoigian = send_follow.json()['message'].split('You need to wait for a new transaction. : ')[1].split('.')[0]
                    phut = thoigian.split(' Minutes')[0]
                    giay = int(phut) * 60

                    # Th√¥ng b√°o cho ng∆∞·ªùi d√πng v√† ƒë·ª£i
                    await update.message.reply_text(f'‚è≥ B·∫°n c·∫ßn ch·ªù {giay} gi√¢y n·ªØa tr∆∞·ªõc khi th·ª±c hi·ªán l·∫°i l·ªánh. H√£y ki√™n nh·∫´n nh√©!')
                    await asyncio.sleep(giay)
                    await update.message.reply_text('‚úÖ **Ho√†n th√†nh!** B·∫°n c√≥ th·ªÉ th·ª±c hi·ªán l·∫°i l·ªánh b√¢y gi·ªù.')
                except Exception as e:
                    await update.message.reply_text('‚ùå **L·ªói**: Kh√¥ng th·ªÉ t√≠nh to√°n th·ªùi gian ch·ªù. Vui l√≤ng th·ª≠ l·∫°i!')
            else:
                await update.message.reply_text('‚ùå **L·ªói**: ƒê√£ x·∫£y ra s·ª± c·ªë khi tƒÉng follow. Vui l√≤ng th·ª≠ l·∫°i sau!')
        else:
            await update.message.reply_text('‚ùå **L·ªói**: Kh√¥ng th·ªÉ l·∫•y th√¥ng tin TikTok. Vui l√≤ng th·ª≠ l·∫°i sau.')

    except Exception as e:
        logger.error(f"Error occurred: {e}")
        await update.message.reply_text(f'‚ùå **L·ªói kh√¥ng x√°c ƒë·ªãnh**: {str(e)}. Vui l√≤ng th·ª≠ l·∫°i sau.')

    # Reset l·∫°i th·ªùi gian cho ng∆∞·ªùi d√πng sau khi x·ª≠ l√Ω xong l·ªánh
    # ƒêi·ªÅu n√†y ƒë·∫£m b·∫£o ng∆∞·ªùi d√πng s·∫Ω kh√¥ng ph·∫£i ƒë·ª£i t·ª´ phi√™n tr∆∞·ªõc
    # last_used_times[chat_id] = None  # N·∫øu b·∫°n s·ª≠ d·ª•ng last_used_times ƒë·ªÉ theo d√µi

# H√†m x·ª≠ l√Ω l·ªánh /fltt <username>
async def increase_follow(update: Update, context: CallbackContext):
    username = ' '.join(context.args)  # L·∫•y username t·ª´ tin nh·∫Øn c·ªßa ng∆∞·ªùi d√πng

    # Ki·ªÉm tra xem ng∆∞·ªùi d√πng c√≥ nh·∫≠p username kh√¥ng
    if not username:
        await update.message.reply_text('üí° **H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng**: \n\n'
                                       'ƒê·ªÉ tƒÉng Follow TikTok, b·∫°n c·∫ßn nh·∫≠p username TikTok. \n'
                                       'V√≠ d·ª•: `/fltt <username>`, trong ƒë√≥ `<username>` l√† t√™n ng∆∞·ªùi d√πng TikTok b·∫°n mu·ªën tƒÉng follow. \n\n'
                                       'H√£y th·ª≠ l·∫°i v√† cung c·∫•p username TikTok h·ª£p l·ªá!')
        return